- name: Config databse hosts and install postgres
  hosts: database
  become: true
  tasks:
    - name: Install common
      ansible.builtin.import_role:
        name: common-config-docker

    # --- Config firewalld

    - name: Move eth1 to internal zone
      ansible.builtin.shell: "firewall-cmd --zone=internal --change-interface=eth1 --permanent"

    - name: Enable postgresql service in zone
      ansible.posix.firewalld:
        zone: internal
        service: postgresql
        permanent: true
        state: enabled

    - name: Reload firewalld
      ansible.builtin.service:
        name: firewalld
        state: reloaded

    - name: Install python libs
      ansible.builtin.dnf:
        name:
          - python3-pexpect.noarch
          - python3-psycopg2
        state: present
        update_cache: true

    - name: Install progress
      ansible.builtin.import_role:
        name: postgres-install

- name: Config replication master
  hosts: db1
  become: true
  tasks:
    - name: Create replicator user
      community.postgresql.postgresql_user:
        name: replicator
        password: "{{ vault_db_replicator_password }}"
        role_attr_flags: replication
      become_user: postgres

    - name: Copy config file
      ansible.builtin.copy:
        src: postgresql.conf
        dest: /var/lib/pgsql/14/data/postgresql.conf
        force: true

    - name: Fix connection params
      ansible.builtin.blockinfile:
        path: /var/lib/pgsql/14/data/pg_hba.conf
        backup: true
        block: |
          local   all         all                                 trust
          host    all         all           0.0.0.0/0             md5
          host    replication replicator    10.10.1.131/32        scram-sha-256
          host    replication replicator    10.10.1.132/32        scram-sha-256

    - name: Restart postgres
      ansible.builtin.service:
        name: postgresql-14
        state: restarted


- name: Config replication slave
  hosts: db2
  become: true
  tasks:
    - name: Stop postgres
      ansible.builtin.service:
        name: postgresql-14
        state: stopped

    - name: Remove old data
      ansible.builtin.file:
        path: /var/lib/pgsql/14/data
        state: absent

    - name: Request basebackup
      ansible.builtin.expect:
        command: 'pg_basebackup -h 10.10.1.131 -U  replicator -p 5432 -D /var/lib/pgsql/14/data/ -R -P'
        responses: 
          '.*Password*': "{{ vault_db_replicator_password }}"
      become_user: postgres

    - name: Copy config file
      ansible.builtin.copy:
        src: postgresql.conf
        dest: /var/lib/pgsql/14/data/postgresql.conf
        force: true

    - name: Restart postgres
      ansible.builtin.service:
        name: postgresql-14
        state: restarted


- name: Init application database
  hosts: db1
  become: true
  tasks:
    - name: Create a new database for cms
      community.postgresql.postgresql_db:
        name: cms
      become_user: postgres

    - name: Create database user
      community.postgresql.postgresql_user:
        db: cms
        name: "{{ vault_db_user }}"
        password: "{{ vault_db_password }}"
        role_attr_flags: "CREATEDB,NOSUPERUSER"
        state: present
      become_user: postgres

- name: Run exporters
  hosts: database
  become: true
  tasks:
    - name: Install edge duckprom node
      ansible.builtin.import_role:
        name: nmix.duckprom
      vars:
        duckprom_dir: /opt/duckprom
        duckprom_grafana_host: 10.10.1.143
        duckprom_basic_auth_enabled: false
