---
- name: Set up mysql servers
  hosts: all
  become: true
  gather_facts: false
  vars:
    root_password: "SuperSecret1#"
    repl_password: "!OtusLinux2018"
  tasks:

    - name: Install python3
      ansible.builtin.raw: yum install -y python3 python3-pip
      changed_when: true

    - name: Gather facts
      ansible.builtin.setup:

    - name: Install python packages
      ansible.builtin.pip:
        name:
          - pymysql

    - name: Install packages
      ansible.builtin.yum:
        name:
          - epel-release
          - vim
        state: present

    - name: Add Percona yum repository
      ansible.builtin.yum:
        name: https://repo.percona.com/yum/percona-release-latest.noarch.rpm
        state: present

    - name: Enable Percona repository
      command: "percona-release setup ps57 -y"

    - name: Install Perconf
      ansible.builtin.yum:
        name: Percona-Server-server-57
        state: present

    - name: Copy config
      ansible.builtin.template:
        src: conf.d/{{ item }}
        dest: /etc/my.cnf.d/{{ item }}
      with_items:
        - 01-base.cnf
        - 02-max-connections.cnf
        - 03-performance.cnf
        - 04-slow-query.cnf
        - 05-binlog.cnf

    - name: Start MySQL server
      ansible.builtin.service:
        name: mysql
        state: started

    - name: Get generated mysql password
      ansible.builtin.shell: "cat /var/log/mysqld.log | grep 'root@localhost:' | awk '{print $11}'"
      register: generated_password

    # - debug:
    #     var: generated_password.stdout

    - name: Change MySQL root password
      ansible.builtin.shell: "mysql -u root -p'{{ generated_password.stdout }}' --connect-expired-password -e \"ALTER USER USER() IDENTIFIED BY '{{ root_password }}';\""

    - name: Copy my.cnf
      ansible.builtin.copy:
        src: my.cnf
        dest: ~/.my.cnf

    - name: Create database
      community.mysql.mysql_db:
        name: bet
        state: present
      when: inventory_hostname == 'master'

    - name: Restore data from dmp
      community.mysql.mysql_db:
        name: bet
        state: import
        target: /vagrant/bet.dmp
      when: inventory_hostname == 'master'

    - name: Create repl user
      community.mysql.mysql_user:
        name: repl
        password: "{{ repl_password }}"
        priv: "*.*:REPLICATION SLAVE"
        host: "%"
      when: inventory_hostname == 'master'

    - name: Set primary server
      community.mysql.mysql_replication:
        mode: changeprimary
        primary_host: 192.168.56.150
        primary_user: repl
        primary_password: "{{ repl_password }}"
        primary_auto_position: true
      when: inventory_hostname == 'slave'

    - name: Start replication
      community.mysql.mysql_replication:
        mode: startreplica
      when: inventory_hostname == 'slave'
